[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "langchain-chroma"
version = "0.2.1"
description = "An integration package connecting Chroma and LangChain"
authors = []
readme = "README.md"
repository = "https://github.com/langchain-ai/langchain"
license = "MIT"

[tool.mypy]
disallow_untyped_defs = true

[tool.poetry.urls]
"Source Code" = "https://github.com/langchain-ai/langchain/tree/master/libs/partners/chroma"
"Release Notes" = "https://github.com/langchain-ai/langchain/releases?q=tag%3A%22langchain-chroma%3D%3D0%22&expanded=true"

[tool.poetry.dependencies]
python = ">=3.9,<4"
langchain-core = ">=0.2.43,<0.4.0,!=0.3.0,!=0.3.1,!=0.3.2,!=0.3.3,!=0.3.4,!=0.3.5,!=0.3.6,!=0.3.7,!=0.3.8,!=0.3.9,!=0.3.10,!=0.3.11,!=0.3.12,!=0.3.13,!=0.3.14"

[[tool.poetry.dependencies.numpy]]
version = "^1.22.4"
python = "<3.12"

[[tool.poetry.dependencies.numpy]]
version = "^1.26.2"
python = ">=3.12"

[tool.ruff.lint]
select = ["E", "F", "I", "T201", "D"]

[tool.coverage.run]
omit = ["tests/*"]

[tool.pytest.ini_options]
addopts = " --strict-markers --strict-config --durations=5"
markers = [
    "requires: mark tests as requiring a specific library",
    "compile: mark placeholder test used to compile integration tests without running them",
]
asyncio_mode = "auto"

[tool.poetry.dependencies.chromadb]
version = ">=0.4.0,<0.7.0,!=0.5.4,!=0.5.5,!=0.5.7,!=0.5.9,!=0.5.10,!=0.5.11,!=0.5.12"

[tool.poetry.dependencies.fastapi]
version = ">=0.95.2,<1"
optional = true

[tool.poetry.group.test]
optional = true

[tool.poetry.group.codespell]
optional = true

[tool.poetry.group.test_integration]
optional = true

[tool.poetry.group.lint]
optional = true

[tool.poetry.group.dev]
optional = true

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
"tests/**" = ["D"]

[tool.poetry.group.test.dependencies]
pytest = "^7.3.0"
freezegun = "^1.2.2"
pytest-mock = "^3.10.0"
syrupy = "^4.0.2"
pytest-watcher = "^0.3.4"
pytest-asyncio = "^0.21.1"
# hack to make sure py3.9 compatible versionof onnxruntime is installed for testing
onnxruntime = [
    { version = "<1.20", python = "<3.10" },
    { version = "*", python = ">=3.10" },
]
pytest-socket = "^0.7.0"
[[tool.poetry.group.test.dependencies.langchain-core]]
path = "../../core"
develop = true
python = ">=3.9"

[[tool.poetry.group.test.dependencies.langchain-core]]
version = ">=0.1.40,<0.3"
python = "<3.9"

[[tool.poetry.group.test.dependencies.langchain-tests]]
path = "../../standard-tests"
develop = true


[tool.poetry.group.codespell.dependencies]
codespell = "^2.2.0"


[tool.poetry.group.test_integration.dependencies]


[tool.poetry.group.lint.dependencies]
ruff = "^0.5"
# hack to make sure py3.9 compatible versionof onnxruntime is installed for testing
onnxruntime = [
    { version = "<1.20", python = "<3.10" },
    { version = "*", python = ">=3.10" },
]


[tool.poetry.group.dev.dependencies]
[[tool.poetry.group.dev.dependencies.langchain-core]]
path = "../../core"
develop = true
python = ">=3.9"

[[tool.poetry.group.dev.dependencies.langchain-core]]
version = ">=0.1.40,<0.3"
python = "<3.9"


[tool.poetry.group.typing.dependencies]
mypy = "^1.10"
types-requests = "^2.31.0.20240406"
[[tool.poetry.group.typing.dependencies.langchain-core]]
path = "../../core"
develop = true
python = ">=3.9"

[[tool.poetry.group.typing.dependencies.langchain-core]]
version = ">=0.1.40,<0.3"
python = "<3.9"
